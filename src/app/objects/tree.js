function Tree(position, t, front) {
	const gList = [
		[
			[[[12,74,43,74,32,68,29,43,22,43,16,68],"","tree1Bottom",1],[[25,25,0,67,11,61,19,67,26,60,36,66,41,58,52,64],"","tree1_1",1],[[24,8,3,43,12,39,18,45,24,38,31,44,37,38,46,42],"","tree1_2",1],[[24,0,7,25,17,19,23,25,29,18,41,25],"","tree1_3",1]],
			[[0,[21,26,3,67,13,60,21,67,28,59,38,64,43,57,53,60],[19,9,4,43,12,39,19,44,23,38,31,44,37,38,46,39],[18,1,7,25,16,20,22,24,28,18,39,21]],[0,[28,25,0,64,11,61,18,67,25,61,33,66,40,59,49,65],[30,10,5,41,14,40,18,46,25,40,31,47,38,41,46,45],[33,-1,12,21,22,19,26,27,35,20,43,25]]]
		],
		[
			[[[50,48,45,151,56,148],"","tree2Bottom",1],[[31,61,0,88,21,89,57,98,101,83,74,61],"","tree2_1",1],[[38,26,5,72,30,79,62,79,64,63,95,71,58,25],"","tree2_2",1],[[47,0,8,50,41,30,57,52,78,37],"","tree2_3",1]],
			[[[46,48,46,151,56,147],[26,62,-3,91,18,91,55,97,97,79,68,59],[33,27,2,75,28,80,60,79,60,63,92,68,52,25],[40,2,5,54,36,31,54,52,74,36]],[[54,48,45,151,56,148],[36,59,2,82,23,86,57,99,102,89,78,64],[50,24,10,65,33,75,65,81,69,66,98,78,69,27],[70,5,20,43,56,32,67,57,91,49]]]
		]
	];
	const gListSizes = [
		[52, 70],
		[101, 145]
	];
	const side = rInt(0, 2) ? -1 : 1;
	const scale = rFloat(.8, 1.7);
	const type = typeof t !== 'undefined' ? t : rInt(0, gList.length);
	const anim = new Anim(...gList[type], rInt(2800, 5000));

	this.front = typeof front !== 'undefined' ? front : !rInt(0, 2);
	this.position = position;

	this.n = () => {};

	this.r = () => {
		c.save();
		c.translate(position.x, gc.res.y - position.y - (gListSizes[type][1] * scale) / 2);
		c.scale(side * scale, scale);
		draw.r(anim.n(), gListSizes[type]);
		c.restore();
	};
}